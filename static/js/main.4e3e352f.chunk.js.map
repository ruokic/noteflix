{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h1","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e3e352f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname }}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (<Container>\n    <span role=\"img\" aria-label=\"Loading\">⏰</span>\n</Container>);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => <Container><Text color={color}>{ text }</Text></Container>\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\").default} />\n                <Rating>\n                    <span role=\"img\" aria-label=\"raitng\">⭐️</span>\n                    {\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title.length > 16 ? `${title.substring(0, 16)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => \n    <>\n    <Helmet>\n        <title>Movies | NoteFlix</title>\n    </Helmet>\n    {loading ? \n    <Loader /> : (\n    <Container>\n        {nowPlaying && nowPlaying.length > 0 && \n        <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => \n                <Poster \n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path} \n                    title={movie.original_title} \n                    rating={movie.vote_average}\n                    year={movie.release_date && movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                />\n            )}\n        </Section>}\n        {upcoming && upcoming.length > 0 && \n        <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => \n                <Poster \n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path} \n                    title={movie.original_title} \n                    rating={movie.vote_average}\n                    year={movie.release_date && movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                />\n            )}\n        </Section>}\n        {popular && popular.length > 0 && \n        <Section title=\"Popular Movies\">\n            {popular.map(movie => \n                <Poster \n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path} \n                    title={movie.original_title} \n                    rating={movie.vote_average}\n                    year={movie.release_date && movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                />\n            )}\n        </Section>}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>)}\n    </>\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"68a4f16daa1cd112dc556c1dce758706\",\n        language: \"en-US\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: (id) =>api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\n            const { data: { results: upcoming } } = await moviesApi.upcoming();\n            const { data: { results: popular } } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        }\n        catch {\n            this.setState({\n                error: \"Can't find movies information.\"\n            });\n        }\n        finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const  { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter \n                nowPlaying={nowPlaying} \n                upcoming={upcoming} \n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => \n    <>\n    <Helmet>\n        <title>TV Shows | NoteFlix</title>\n    </Helmet>\n    {loading ? <Loader /> : (\n    <Container>\n        {topRated && topRated.length > 0 && \n        <Section title=\"Top Rated Shows\">\n            {topRated.map(show => \n                <Poster \n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path} \n                    title={show.original_name} \n                    rating={show.vote_average}\n                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                />\n            )}\n        </Section>}\n        {popular && popular.length > 0 && \n        <Section title=\"Popular Shows\">\n            {popular.map(show => \n                <Poster \n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path} \n                    title={show.original_name} \n                    rating={show.vote_average}\n                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                />\n            )}\n        </Section>}\n        {airingToday && airingToday.length > 0 && \n        <Section title=\"Airing Today Shows\">\n            {airingToday.map(show => \n                <Poster \n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path} \n                    title={show.original_name} \n                    rating={show.vote_average}\n                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                />\n            )}\n        </Section>}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>)}\n    </>\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: topRated }} = await tvApi.topRated();\n            const { data: { results: popular }} = await tvApi.popular();\n            const { data: { results: airingToday }} = await tvApi.airingToday();\n            this.setState({ topRated, popular, airingToday });\n        } \n        catch {\n            this.setState({\n                error: \"Can't find TV information.\"\n            });\n        }\n        finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render () {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter \n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ \n    movieResults, \n    tvResults, \n    error, \n    searchTerm, \n    loading, \n    handleSubmit,\n    updateTerm\n}) => <Container>\n    <Helmet>\n        <title>Search | NoteFlix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n    <Input \n        placeholder=\"Search Movies or TV Shows...\" \n        value={searchTerm} \n        onChange={updateTerm} \n    />\n    </Form>\n    {loading ? (<Loader />) : (<>\n        {movieResults && movieResults.length > 0 && (\n        <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n                <Poster \n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path} \n                    title={movie.original_title} \n                    rating={movie.vote_average}\n                    year={movie.release_date && movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                />\n            ))}\n        </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n        <Section title=\"TV Show Results\">\n            {tvResults.map(show => \n                <Poster \n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path} \n                    title={show.original_name} \n                    rating={show.vote_average}\n                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                />\n            )}\n        </Section>\n        )}\n        {Message && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults && movieResults && \n        tvResults.length === 0 && movieResults.length === 0 && \n        <Message text=\"Nothing Found\" color=\"#95a5a6\" />}\n    </>\n    )}\n</Container>;\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n\n        if (searchTerm !== \"\") {\n            this.searchByTerm(searchTerm);\n        }\n    }\n\n    updateTerm = (event) => {\n        const { target: { value } } = event;\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n    searchByTerm = async() => {\n        const { searchTerm } = this.state;\n        try {\n            this.setState({ loading: true });\n            const { data: { results: movieResults }} = await moviesApi.search(searchTerm);\n            const { data: { results: tvResults }} = await tvApi.search(searchTerm);\n            this.setState({ movieResults, tvResults });\n        } \n        catch  {\n            this.setState({ error: \"Can't find results.\"});\n        }\n        finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render () {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n        return (\n            <SearchPresenter \n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 20px;\n`;\n\nconst Title = styled.h1`\n    font-size: 32px;\n    margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) => \n    loading ? (\n        <>\n        <Helmet>\n            <title>Loading | NoteFlix</title>\n        </Helmet>\n        <Loader />\n        </>\n    ) : (\n        <Container>\n            <Helmet>\n                <title>\n                    {`${result?.original_title ? \n                    result.original_title : \n                    result?.original_name} | NoteFlix`}\n                </title>\n            </Helmet>\n            <Backdrop \n                bgImage={`https://image.tmdb.org/t/p/original${result?.backdrop_path}`} \n            />\n            <Content>\n                <Cover \n                    bgImage={result?.poster_path ? \n                        `https://image.tmdb.org/t/p/original${result.poster_path}` : \n                        require(\"../../assets/noPosterSmall.png\").default} \n                />\n                <Data>\n                    <Title>\n                        {result?.original_title ? \n                        result.original_title : \n                        result?.original_name}\n                    </Title>\n                    <ItemContainer>\n                        <Item>\n                            {result?.release_date ? \n                            result.release_date.substring(0, 4) : \n                            result?.first_air_date.substring(0, 4)}\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {result?.runtime ? \n                            result.runtime : \n                            result?.episode_run_time[0]} min\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {result?.genres &&\n                            result.genres.map((genre, index) => \n                            index === result.genres.length - 1 ?\n                            genre.name : `${genre.name} / `)}\n                        </Item>\n                        <Divider>•</Divider>\n                    </ItemContainer>\n                    <Overview>\n                        {result?.overview}\n                    </Overview>\n                </Data>\n            </Content>\n        </Container>\n    );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default DetailPresenter;","import Detail from \"Routes/Detail\";\nimport DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const { location: { pathname }} = props;\n        this.state = {\n            result: null,\n            loading: false,\n            error: null,\n            isMovie: pathname.includes(\"/movie/\")\n        }\n    }\n\n    async componentDidMount() {\n        const { \n            match: { params : { id }}, \n            history: { push }\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        \n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            }\n            else {\n                ({ data: result } = await tvApi.showDetail(parsedId));\n            }\n        }\n        catch {\n            this.setState( { error: \"Can't find anything.\"});\n        }\n        finally {\n            this.setState({ loading: false, result });\n        }\n    }\n\n    render () {\n        const { result, loading, error } = this.state;\n        return (\n            <DetailPresenter \n                result={result}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/tv\" exact component={TV} />\n            <Route path=\"/search\" exact component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/show/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      <Router />\n      <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}